{{!-- https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-3 --}}
{{#if dashboard}}

<link rel="stylesheet" href="/stylesheets/dashboard-style.css">

<div id="embed-api-auth-container" style="display: none"></div>

</div>
<ul class="twoxtwo">
  <li id="container1">
    <div id="view-selector-1-container" class="d-none"></div>
    <div id="chart-1-container"></div>
  </li>
  <li id="container2">
    <div id="view-selector-2-container" class="d-none"></div>
    <div id="chart-2-container"></div>
  </li>
  <li id="container3">
    <div id="view-selector-3-container" class="d-none"></div>
    <div id="chart-3-container"></div>
  </li>
  <li>
    <div id="container4"></div>
  </li>
</ul>

<script>
  (function (w, d, s, g, js, fs) {
    g = w.gapi || (w.gapi = {});
    g.analytics = {
      q: [],
      ready: function (f) {
        this.q.push(f);
      }
    };
    js = d.createElement(s);
    fs = d.getElementsByTagName(s)[0];
    js.src = "https://apis.google.com/js/platform.js";
    fs.parentNode.insertBefore(js, fs);
    js.onload = function () {
      g.load("analytics");
    };
  })(window, document, "script");
</script>

<script>
  //console.log('{{dashboard.name}}')
  gapi.analytics.ready(function () {
    /**
     * Authorize the user immediately if the user has already granted access.
     * If no access has been created, render an authorize button inside the
     * element with the ID "embed-api-auth-container".
     */
    gapi.analytics.auth.authorize({
      container: "embed-api-auth-container",
      clientid:
        "315451096739-f5q6rp31jm5db9f4ec5fflq7g793db0m.apps.googleusercontent.com"
    });
    /**
     * Create a ViewSelector for the first view to be rendered inside of an
     * element with the id "view-selector-1-container".
     */
    var viewSelector1 = new gapi.analytics.ViewSelector({
      container: "view-selector-1-container"
    });
    /**
     * Create a ViewSelector for the second view to be rendered inside of an
     * element with the id "view-selector-2-container".
     */
    var viewSelector2 = new gapi.analytics.ViewSelector({
      container: "view-selector-2-container"
    });
    /**
     * Create a ViewSelector for the thirs view to be rendered inside of an
     * element with the id "view-selector-3-container".
     */
    var viewSelector3 = new gapi.analytics.ViewSelector({
      container: "view-selector-3-container"
    });

    // Render both view selectors to the page.

    var metrics = [];
    {{#each dashboard.metrics}}
    metrics.push('{{name}}')
    {{/each}}

        if (metrics
          .includes("ga:sessions")) {
          viewSelector1.execute();
        }


        if (metrics
          .includes("ga:users")) {
          viewSelector2.execute();
        }

        if (metrics
          .includes("ga:sessionDuration")) {
          viewSelector3.execute();
        }




        //{if dashboard.metrics contient dataChart2.query.metrics alors executer}
        //{if dashboard.metrics contient dataChart3.query.metrics alors executer}

        /**
         * Create the first DataChart for top countries over the past 7 days.
         * It will be rendered inside an element with the id "chart-1-container".
         */
        var dataChart1 = new gapi.analytics.googleCharts.DataChart({
          query: {
            metrics: "ga:sessions",
            dimensions: "ga:date",
            "start-date": "7daysAgo",
            "end-date": "yesterday"
          },
          chart: {
            container: "chart-1-container",
            type: "LINE",
            options: {
              width: "100%"
            }
          }
        });

        /**
         * Create the second DataChart for top countries over the past 7 days.
         * It will be rendered inside an element with the id "chart-2-container".
         */
        var dataChart2 = new gapi.analytics.googleCharts.DataChart({
          query: {
            metrics: "ga:users",
            dimensions: "ga:date",
            "start-date": "7daysAgo",
            "end-date": "yesterday"
          },
          chart: {
            container: "chart-2-container",
            type: "LINE",
            options: {
              width: "100%"
            }
          }
        });
        /**
         * Create the third DataChart for top countries over the past 7 days.
         * It will be rendered inside an element with the id "chart-3-container".
         */
        var dataChart3 = new gapi.analytics.googleCharts.DataChart({
          query: {
            metrics: "ga:sessionDuration",
            dimensions: "ga:date",
            "start-date": "7daysAgo",
            "end-date": "yesterday"
          },
          chart: {
            container: "chart-3-container",
            type: "LINE",
            options: {
              width: "100%"
            }
          }
        });
        /**
         * Update the first dataChart when the first view selecter is changed.
         */
        viewSelector1.on("change", function (ids) {
          dataChart1.set({ query: { ids: ids } }).execute();
        });
        /**
         * Update the second dataChart when the second view selecter is changed.
         */
        viewSelector2.on("change", function (ids) {
          dataChart2.set({ query: { ids: ids } }).execute();
        });
        /**
         * Update the thirs dataChart when the second view selecter is changed.
         */
        viewSelector3.on("change", function (ids) {
          dataChart3.set({ query: { ids: ids } }).execute();
        });
      });




</script>

{{else}}
<h1> Déso, tu n'as pas accès à cette page </h1>
{{/if}}

</body>